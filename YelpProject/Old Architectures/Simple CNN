{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Simple CNN","provenance":[],"collapsed_sections":[],"machine_shape":"hm"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["# Simple CNN\n","This is the most simplest version of CNN we will implement. It has just one convolution layer and one dense layer. \n","\n","We will stick to adam optimizer due to it's popularity in ML literature and wide use in practical applications. The output of the last dense layer is a single neuron that outputs a real number.\n","\n","We hope that results will be mapped to appropriate ratings, but with such a simple neural net, have low hopes."],"metadata":{"id":"MEUz4k2_chpf"}},{"cell_type":"markdown","source":["## Mount Drive\n","Mount YelpProject folder from Drive, and unzip"],"metadata":{"id":"JHjKqt-OgMLO"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"E_o5CbbkGjEO"},"outputs":[],"source":["from google.colab import drive\n","drive.mount('/content/drive/')\n","\n","!unzip \"/content/drive/MyDrive/YelpProject/foodPhotos.zip\""]},{"cell_type":"markdown","source":["## Import data extraction libraries and store food entries as Pandas DataFrame"],"metadata":{"id":"O4-S_zLCgdl4"}},{"cell_type":"code","source":["import json\n","import pandas as pd\n","import numpy as np\n","\n","with open('/content/drive/MyDrive/YelpProject/foodEntries.json', 'r') as f:\n","  data = json.load(f)\n","df = pd.DataFrame(data)\n","df.dropna(inplace=True)\n","df = df.head(20000)"],"metadata":{"id":"gFeg4JuBJ_Om"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Data Preprocessing\n","Image resizing. Resize to 128\\*128\\*3 (RGB)\n","\n","Create train and test datasets using train_test_split function from sklearn.model_selection.\n","\n","Ideally, we would like to include image augmentations here to deal with a relatively small number of training samples for images with extreme ratings (as oppose to more frequent ratings, like 4).\n","\n","\n","\n"],"metadata":{"id":"KfPFz_USg7wi"}},{"cell_type":"code","source":["from keras.preprocessing.image import load_img\n","from keras.preprocessing.image import img_to_array\n","from PIL import Image\n","from sklearn.model_selection import train_test_split\n","\n","def getImageArray(df):\n","  foodPhotosFolder = \"/content/foodPhotos/\"\n","  images = []\n","  new_width = 128\n","  new_height = 128\n","\n","  loaded = 0\n","  for photo_id in df['photo_id']:\n","    img = Image.open(foodPhotosFolder + photo_id + \".jpg\")\n","    img = img.resize((new_width, new_height), Image.ANTIALIAS)\n","    img_array = np.array(img)\n","    images.append(img_array)\n","    loaded+=1\n","    # print(loaded)\n","  return images\n","\n","images = getImageArray(df)\n","X_train, X_test, y_train, y_test = train_test_split(images, df['rating'], test_size=0.33, random_state=42)\n"],"metadata":{"id":"zE4zxDRyQDoC"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Verify data makes sense. Should give 128 by 128 by 3 array."],"metadata":{"id":"XClBkhkyiL2h"}},{"cell_type":"code","source":["X_train[100]"],"metadata":{"id":"LvjaeZr4EchV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649766804067,"user_tz":240,"elapsed":35,"user":{"displayName":"hshmat sahak","userId":"01885238566109824492"}},"outputId":"1f3af5d7-1d47-4f90-a697-93b0471356e7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[228, 226, 214],\n","        [228, 226, 214],\n","        [228, 228, 216],\n","        ...,\n","        [222, 211, 191],\n","        [223, 211, 195],\n","        [223, 211, 195]],\n","\n","       [[236, 235, 227],\n","        [236, 234, 227],\n","        [236, 236, 230],\n","        ...,\n","        [224, 213, 198],\n","        [226, 214, 199],\n","        [226, 214, 198]],\n","\n","       [[241, 240, 238],\n","        [241, 240, 237],\n","        [241, 242, 241],\n","        ...,\n","        [224, 209, 194],\n","        [226, 213, 198],\n","        [227, 215, 199]],\n","\n","       ...,\n","\n","       [[229, 230, 234],\n","        [232, 233, 237],\n","        [228, 229, 233],\n","        ...,\n","        [222, 222, 230],\n","        [221, 221, 229],\n","        [223, 223, 231]],\n","\n","       [[229, 230, 234],\n","        [231, 232, 236],\n","        [227, 228, 232],\n","        ...,\n","        [223, 223, 231],\n","        [222, 222, 230],\n","        [224, 224, 232]],\n","\n","       [[230, 231, 235],\n","        [231, 232, 236],\n","        [229, 230, 234],\n","        ...,\n","        [224, 224, 232],\n","        [223, 223, 231],\n","        [223, 223, 231]]], dtype=uint8)"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["Verify data make sense. Should give a sample image."],"metadata":{"id":"hXvOs-FmiZIz"}},{"cell_type":"code","source":["img = Image.fromarray(X_train[100], 'RGB')\n","img"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":145},"id":"C5ohYoUoaTs8","executionInfo":{"status":"ok","timestamp":1649766804068,"user_tz":240,"elapsed":31,"user":{"displayName":"hshmat sahak","userId":"01885238566109824492"}},"outputId":"c2c84825-568e-4cd3-af2d-e453766cc9ca"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<PIL.Image.Image image mode=RGB size=128x128 at 0x7F73CE2DD510>"],"image/png":"\n"},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","source":["Create train and test labels"],"metadata":{"id":"xdP49YLcimLu"}},{"cell_type":"code","source":["y_traindf = pd.DataFrame(y_train)\n","train_labels = np.array(y_traindf['rating'])\n","y_testdf = pd.DataFrame(y_test) \n","test_labels = np.array(y_testdf['rating'])\n","\n","train_labels = np.expand_dims(train_labels, axis=1)\n","test_labels = np.expand_dims(test_labels, axis=1)"],"metadata":{"id":"9rvsN0B1D98Q"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Create train_images and test_images datasets. \n","\n","Normalize image representations as is standard practice when using CNNs for images\n"],"metadata":{"id":"RCsRtlkti0wk"}},{"cell_type":"code","source":["train_images = np.array(X_train)"],"metadata":{"id":"tNd0OB53hWgi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_images = np.array(X_test)"],"metadata":{"id":"b7q6B6-whYqa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Normalize pixel values to be between 0 and 1\n","for i in range(len(train_images)):\n","    train_images[i] = np.divide(train_images[i], 255.0)\n","for i in range(len(test_images)):\n","    test_images[i] = np.divide(test_images[i], 255.0)"],"metadata":{"id":"N68lyh20Ask3"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Import Tensorflow modules for Model creation and training"],"metadata":{"id":"FBtD8HXsjEd1"}},{"cell_type":"code","source":["import tensorflow as tf\n","\n","from tensorflow.keras import datasets, layers, models\n","import matplotlib.pyplot as plt"],"metadata":{"id":"awXZCLwzjDfA"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Create model"],"metadata":{"id":"Yb-eJBwkjNNg"}},{"cell_type":"code","source":["model = models.Sequential()\n","model.add(layers.Conv2D(1, (3,3), activation='relu', input_shape=(128, 128, 3)))  #(3,3)"],"metadata":{"id":"P33XU7NFAscE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model.summary()"],"metadata":{"id":"TXyO579nAr5o","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649766812377,"user_tz":240,"elapsed":46,"user":{"displayName":"hshmat sahak","userId":"01885238566109824492"}},"outputId":"4f4c2679-fbd0-4593-fb3a-8f22de23d4e9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," conv2d (Conv2D)             (None, 126, 126, 1)       28        \n","                                                                 \n","=================================================================\n","Total params: 28\n","Trainable params: 28\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["model.add(layers.Flatten())\n","model.add(layers.Dense(1))"],"metadata":{"id":"NwMp1mSrArWV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ho_xQ-xVYAA_","executionInfo":{"status":"ok","timestamp":1649766812379,"user_tz":240,"elapsed":36,"user":{"displayName":"hshmat sahak","userId":"01885238566109824492"}},"outputId":"f19d738a-d23e-410b-c2e9-1dc4d1c198a5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," conv2d (Conv2D)             (None, 126, 126, 1)       28        \n","                                                                 \n"," flatten (Flatten)           (None, 15876)             0         \n","                                                                 \n"," dense (Dense)               (None, 1)                 15877     \n","                                                                 \n","=================================================================\n","Total params: 15,905\n","Trainable params: 15,905\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"markdown","source":["### Train model\n","10 epochs is enough to reach stability of train loss without overfitting."],"metadata":{"id":"WxcxZNd8jRqM"}},{"cell_type":"code","source":["model.compile(optimizer='adam', \\\n","              loss = 'mse', \\\n","              metrics=['accuracy', 'mse'])\n","\n","history = model.fit(train_images, train_labels, epochs=10, \\\n","                    validation_data = (test_images, test_labels), batch_size=128)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T0dUK2XSYBqK","executionInfo":{"status":"ok","timestamp":1649766844397,"user_tz":240,"elapsed":32044,"user":{"displayName":"hshmat sahak","userId":"01885238566109824492"}},"outputId":"3ed1f2ff-3c5d-4aef-f150-36dd3841bb2c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","105/105 [==============================] - 14s 25ms/step - loss: 2.4485 - accuracy: 2.9851e-04 - mse: 2.4485 - val_loss: 0.5631 - val_accuracy: 1.5152e-04 - val_mse: 0.5631\n","Epoch 2/10\n","105/105 [==============================] - 2s 16ms/step - loss: 0.4275 - accuracy: 2.9851e-04 - mse: 0.4275 - val_loss: 0.4142 - val_accuracy: 1.5152e-04 - val_mse: 0.4142\n","Epoch 3/10\n","105/105 [==============================] - 2s 20ms/step - loss: 0.3590 - accuracy: 2.9851e-04 - mse: 0.3590 - val_loss: 0.3718 - val_accuracy: 1.5152e-04 - val_mse: 0.3718\n","Epoch 4/10\n","105/105 [==============================] - 2s 20ms/step - loss: 0.3340 - accuracy: 2.9851e-04 - mse: 0.3340 - val_loss: 0.3488 - val_accuracy: 1.5152e-04 - val_mse: 0.3488\n","Epoch 5/10\n","105/105 [==============================] - 2s 17ms/step - loss: 0.3189 - accuracy: 2.9851e-04 - mse: 0.3189 - val_loss: 0.3383 - val_accuracy: 1.5152e-04 - val_mse: 0.3383\n","Epoch 6/10\n","105/105 [==============================] - 2s 17ms/step - loss: 0.3096 - accuracy: 2.9851e-04 - mse: 0.3096 - val_loss: 0.3368 - val_accuracy: 1.5152e-04 - val_mse: 0.3368\n","Epoch 7/10\n","105/105 [==============================] - 2s 17ms/step - loss: 0.3031 - accuracy: 2.9851e-04 - mse: 0.3031 - val_loss: 0.3326 - val_accuracy: 1.5152e-04 - val_mse: 0.3326\n","Epoch 8/10\n","105/105 [==============================] - 2s 19ms/step - loss: 0.2970 - accuracy: 2.9851e-04 - mse: 0.2970 - val_loss: 0.3306 - val_accuracy: 1.5152e-04 - val_mse: 0.3306\n","Epoch 9/10\n","105/105 [==============================] - 2s 17ms/step - loss: 0.2906 - accuracy: 2.9851e-04 - mse: 0.2906 - val_loss: 0.3288 - val_accuracy: 1.5152e-04 - val_mse: 0.3288\n","Epoch 10/10\n","105/105 [==============================] - 2s 17ms/step - loss: 0.2826 - accuracy: 2.9851e-04 - mse: 0.2826 - val_loss: 0.3285 - val_accuracy: 1.5152e-04 - val_mse: 0.3285\n"]}]},{"cell_type":"code","source":["test_images[0].shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HHe8zclRxvmM","executionInfo":{"status":"ok","timestamp":1649766844398,"user_tz":240,"elapsed":37,"user":{"displayName":"hshmat sahak","userId":"01885238566109824492"}},"outputId":"66d26b0a-4561-4472-9b1b-84831c2b9e42"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(128, 128, 3)"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["train_labels[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xRtvzliTxTkH","executionInfo":{"status":"ok","timestamp":1649766844399,"user_tz":240,"elapsed":31,"user":{"displayName":"hshmat sahak","userId":"01885238566109824492"}},"outputId":"873f80d7-35db-4800-db74-9973d6da8ed1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([4.5])"]},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","source":["Visualize training by plotting train and validation losses vs epoch"],"metadata":{"id":"2Mk0y34djfji"}},{"cell_type":"code","source":["# Evaluate the model\n","plt.plot(history.history['loss'], label='loss')\n","plt.plot(history.history['val_loss'], label='val_loss')\n","plt.xlabel('Epoch')\n","plt.ylabel('Loss')\n","plt.legend(loc='lower right')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":296},"id":"l7jgxYXYYSjR","executionInfo":{"status":"ok","timestamp":1649766845003,"user_tz":240,"elapsed":631,"user":{"displayName":"hshmat sahak","userId":"01885238566109824492"}},"outputId":"d6653fcc-3fb1-4351-8b69-011714512845"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7f73c030da10>"]},"metadata":{},"execution_count":18},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["S"],"metadata":{"id":"Cp9dtCkhj2Y9"}},{"cell_type":"code","source":["# Evaluate the model\n","plt.plot(history.history['mse'], label='mse')\n","plt.plot(history.history['val_mse'], label='val_mse')\n","plt.xlabel('Epoch')\n","plt.ylabel('Mean Squared Error')\n","plt.legend(loc='lower right')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":296},"id":"ZmDRT3svjrtX","executionInfo":{"status":"ok","timestamp":1649766845362,"user_tz":240,"elapsed":369,"user":{"displayName":"hshmat sahak","userId":"01885238566109824492"}},"outputId":"d2b373b6-195e-41ec-d900-b7a36673ed62"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7f73c0594fd0>"]},"metadata":{},"execution_count":19},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["## Compute Test Loss and Mean Squared Error"],"metadata":{"id":"0mNGnQ6wkHvc"}},{"cell_type":"code","source":["test_loss, test_acc, test_mse = model.evaluate(test_images, test_labels, verbose=2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uoh582u0mJWO","executionInfo":{"status":"ok","timestamp":1649766846320,"user_tz":240,"elapsed":966,"user":{"displayName":"hshmat sahak","userId":"01885238566109824492"}},"outputId":"37cb8ab5-232c-4bdc-fc43-7443099350aa"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["207/207 - 1s - loss: 0.3285 - accuracy: 1.5152e-04 - mse: 0.3285 - 847ms/epoch - 4ms/step\n"]}]},{"cell_type":"code","source":["test_images[0].shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gy8YwtmIIoGx","executionInfo":{"status":"ok","timestamp":1649766846322,"user_tz":240,"elapsed":20,"user":{"displayName":"hshmat sahak","userId":"01885238566109824492"}},"outputId":"df9497a2-2fd3-41b1-b333-9e5f14229a4f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(128, 128, 3)"]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["### Test on a few sample inputs\n","\n","It seems like network does pretty well. The prediction is never more than 1 off, which is nice to observe (but not indicative of a good model). However, all the first 50 images have ratings between 3 and 5, so it is hard to say how well our model can generalize outside of that."],"metadata":{"id":"4TmaR9FgkPXc"}},{"cell_type":"code","source":["x = test_images[:50]\n","x.shape\n","pred = model.predict(x)\n","print(pred)\n","print(\"\\n\")\n","print(test_labels[:50])\n","print(\"\\n\")\n","print(pred - test_labels[:50])"],"metadata":{"id":"b5ukW1BKmWVd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# import pickle\n","# from google.colab import files\n","\n","# X_train_dump = \"X_train.pkl\"\n","# X_test_dump = \"X_test.pkl\"\n","# y_train_dump = \"y_train.pkl\"\n","# y_test_dump = \"y_test.pkl\"\n","\n","# open_file = open(X_train_dump, \"wb\")\n","# pickle.dump(X_train, open_file)\n","# open_file.close()\n","# files.download(X_train_dump)\n","\n","# open_file = open(X_test_dump, \"wb\")\n","# pickle.dump(X_test, open_file)\n","# open_file.close()\n","# files.download(X_test_dump)\n","\n","# open_file = open(y_train_dump, \"wb\")\n","# pickle.dump(y_train, open_file)\n","# open_file.close()\n","# files.download(y_train_dump)\n","\n","# open_file = open(y_test_dump, \"wb\")\n","# pickle.dump(y_test, open_file)\n","# open_file.close()\n","# files.download(y_test_dump)"],"metadata":{"id":"QzOiz-kuk9CD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pred = model.predict(test_images)\n","y_true = []\n","for y in test_labels:\n","  y_true.append(round(y[0] * 2))\n","y_pred = []\n","for y in pred:\n","  y_pred.append(round(y[0] * 2))\n","  if y_pred[-1] > 10:\n","    y_pred[-1] = 10\n","  if y_pred[-1] < 0:\n","    y_pred[-1] = 0"],"metadata":{"id":"t6q714EVB4Zr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y_true.append(0)\n","y_pred.append(0)\n","y_true.append(1)\n","y_pred.append(1)"],"metadata":{"id":"rGdb91TbxgZT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n","cm = confusion_matrix(y_true, y_pred)\n","disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=[0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,5])\n","disp.plot()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":296},"id":"SdqvkITDCHv5","executionInfo":{"status":"ok","timestamp":1649767474983,"user_tz":240,"elapsed":1613,"user":{"displayName":"hshmat sahak","userId":"01885238566109824492"}},"outputId":"69289346-d588-446e-90df-9c7bca3e80e3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x7f72de577210>"]},"metadata":{},"execution_count":56},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["from sklearn.metrics import plot_confusion_matrix\n","plot_confusion_matrix(model, test_images, test_labels) "],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":382},"id":"C63j_cylCxab","executionInfo":{"status":"error","timestamp":1649754779420,"user_tz":240,"elapsed":130,"user":{"displayName":"hshmat sahak","userId":"01885238566109824492"}},"outputId":"539d5cc8-f540-42e4-db96-5ec72f7a96ff"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function plot_confusion_matrix is deprecated; Function `plot_confusion_matrix` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: ConfusionMatrixDisplay.from_predictions or ConfusionMatrixDisplay.from_estimator.\n","  warnings.warn(msg, category=FutureWarning)\n"]},{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-30-c3dff656131b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmetrics\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mplot_confusion_matrix\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mplot_confusion_matrix\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest_images\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest_labels\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py\u001b[0m in \u001b[0;36mwrapped\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     86\u001b[0m         \u001b[0;32mdef\u001b[0m \u001b[0mwrapped\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     87\u001b[0m             \u001b[0mwarnings\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmsg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcategory\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mFutureWarning\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 88\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfun\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     89\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     90\u001b[0m         \u001b[0mwrapped\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__doc__\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_update_doc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mwrapped\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__doc__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_plot/confusion_matrix.py\u001b[0m in \u001b[0;36mplot_confusion_matrix\u001b[0;34m(estimator, X, y_true, labels, sample_weight, normalize, display_labels, include_values, xticks_rotation, values_format, cmap, ax, colorbar)\u001b[0m\n\u001b[1;32m    561\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    562\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mis_classifier\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mestimator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 563\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"plot_confusion_matrix only supports classifiers\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    564\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    565\u001b[0m     \u001b[0my_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mestimator\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: plot_confusion_matrix only supports classifiers"]}]}]}