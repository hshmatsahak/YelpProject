{"cells":[{"cell_type":"markdown","metadata":{"id":"Nhqq_G6BLBPv"},"source":["# Ensemble Network"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"H129KlwhhrCk"},"outputs":[],"source":["import tensorflow as tf\n","\n","from google.colab import drive\n","drive.mount('/content/drive/')\n","\n","!unzip \"/content/drive/MyDrive/YelpProject/foodPhotos.zip\""]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":909,"status":"ok","timestamp":1649419070796,"user":{"displayName":"ECE324 Group","userId":"00541832639107211620"},"user_tz":240},"id":"4sb9H_T9huue","outputId":"0958c8dd-8120-4ea7-86e7-c2e95cf6749b"},"outputs":[{"data":{"text/html":["\n","  \u003cdiv id=\"df-d20e9b1a-3a1d-4ac6-a564-e8853844296f\"\u003e\n","    \u003cdiv class=\"colab-df-container\"\u003e\n","      \u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003ephoto_id\u003c/th\u003e\n","      \u003cth\u003ebusiness_id\u003c/th\u003e\n","      \u003cth\u003ecaption\u003c/th\u003e\n","      \u003cth\u003elabel\u003c/th\u003e\n","      \u003cth\u003erating\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003elZlulVObEzvCRhEmJAq-7A\u003c/td\u003e\n","      \u003ctd\u003e2bncbx08BFs_IO6H-yWBxw\u003c/td\u003e\n","      \u003ctd\u003eDim sum! Turnip pancake\u003c/td\u003e\n","      \u003ctd\u003efood\u003c/td\u003e\n","      \u003ctd\u003e3.0\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1\u003c/th\u003e\n","      \u003ctd\u003eXvO6tewa1-gH20GIUtvQTA\u003c/td\u003e\n","      \u003ctd\u003eqUY04I5gDm5uyInd1mCizg\u003c/td\u003e\n","      \u003ctd\u003eIf you're into wicked good food\\, go ahead.\u003c/td\u003e\n","      \u003ctd\u003efood\u003c/td\u003e\n","      \u003ctd\u003e4.0\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e2\u003c/th\u003e\n","      \u003ctd\u003eqTOGkJNCgdcD1GalYG6bZw\u003c/td\u003e\n","      \u003ctd\u003eSAP7Myf72pKvEc54Zl45vQ\u003c/td\u003e\n","      \u003ctd\u003e\u003c/td\u003e\n","      \u003ctd\u003efood\u003c/td\u003e\n","      \u003ctd\u003e3.5\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e3\u003c/th\u003e\n","      \u003ctd\u003emwWW3GSErVOsSsR3GQ5CLg\u003c/td\u003e\n","      \u003ctd\u003eVrlJifUE36-U_OaiipGexA\u003c/td\u003e\n","      \u003ctd\u003e\u003c/td\u003e\n","      \u003ctd\u003efood\u003c/td\u003e\n","      \u003ctd\u003e4.0\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e4\u003c/th\u003e\n","      \u003ctd\u003eGyGbnJ9cwCe80fGYr9ZdRA\u003c/td\u003e\n","      \u003ctd\u003eBujhETG-6POYdsi_8I_MBg\u003c/td\u003e\n","      \u003ctd\u003e\u003c/td\u003e\n","      \u003ctd\u003efood\u003c/td\u003e\n","      \u003ctd\u003e3.5\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\n","      \u003cbutton class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d20e9b1a-3a1d-4ac6-a564-e8853844296f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\"\u003e\n","        \n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\"\u003e\n","    \u003cpath d=\"M0 0h24v24H0V0z\" fill=\"none\"/\u003e\n","    \u003cpath d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/\u003e\u003cpath d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/\u003e\n","  \u003c/svg\u003e\n","      \u003c/button\u003e\n","      \n","  \u003cstyle\u003e\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  \u003c/style\u003e\n","\n","      \u003cscript\u003e\n","        const buttonEl =\n","          document.querySelector('#df-d20e9b1a-3a1d-4ac6-a564-e8853844296f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d20e9b1a-3a1d-4ac6-a564-e8853844296f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '\u003ca target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb\u003edata table notebook\u003c/a\u003e'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      \u003c/script\u003e\n","    \u003c/div\u003e\n","  \u003c/div\u003e\n","  "],"text/plain":["                 photo_id             business_id  \\\n","0  lZlulVObEzvCRhEmJAq-7A  2bncbx08BFs_IO6H-yWBxw   \n","1  XvO6tewa1-gH20GIUtvQTA  qUY04I5gDm5uyInd1mCizg   \n","2  qTOGkJNCgdcD1GalYG6bZw  SAP7Myf72pKvEc54Zl45vQ   \n","3  mwWW3GSErVOsSsR3GQ5CLg  VrlJifUE36-U_OaiipGexA   \n","4  GyGbnJ9cwCe80fGYr9ZdRA  BujhETG-6POYdsi_8I_MBg   \n","\n","                                       caption label  rating  \n","0                      Dim sum! Turnip pancake  food     3.0  \n","1  If you're into wicked good food\\, go ahead.  food     4.0  \n","2                                               food     3.5  \n","3                                               food     4.0  \n","4                                               food     3.5  "]},"execution_count":2,"metadata":{},"output_type":"execute_result"}],"source":["import json\n","import pandas as pd\n","import numpy as np\n","\n","with open('/content/drive/MyDrive/YelpProject/foodEntries.json', 'r') as f:\n","  data = json.load(f)\n","df = pd.DataFrame(data)\n","df = df.dropna()\n","max_images = 20000\n","df = df.head(max_images)\n","df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OiNbQrllh0sb"},"outputs":[],"source":["from keras.preprocessing.image import load_img\n","from keras.preprocessing.image import img_to_array\n","from PIL import Image\n","from sklearn.model_selection import train_test_split\n","\n","image_width = 128\n","image_height = 128\n","\n","def getImageArray(df):\n","  foodPhotosFolder = \"/content/foodPhotos/\"\n","  images = []\n","  new_width = image_width\n","  new_height = image_height\n","\n","  loaded = 0\n","  for photo_id in df['photo_id']:\n","    img = Image.open(foodPhotosFolder + photo_id + \".jpg\")\n","    img = img.resize((new_width, new_height), Image.ANTIALIAS)\n","    img_array = np.array(img)\n","    images.append(img_array)\n","    loaded+=1\n","    print(loaded)\n","  return images\n","\n","images = getImageArray(df)\n","X_train, X_valtest, y_train, y_valtest = train_test_split(images, df['rating'], test_size=0.4, random_state=42)\n","X_val, X_test, y_val, y_test = train_test_split(X_valtest, y_valtest, test_size=0.5, random_state=42)"]},{"cell_type":"code","execution_count":4,"metadata":{"executionInfo":{"elapsed":184,"status":"ok","timestamp":1649419220065,"user":{"displayName":"ECE324 Group","userId":"00541832639107211620"},"user_tz":240},"id":"VJH9LdFCh1cZ"},"outputs":[],"source":["y_traindf = pd.DataFrame(y_train)\n","train_labels = np.array(y_traindf['rating'])\n","y_valdf = pd.DataFrame(y_val)\n","val_labels = np.array(y_valdf['rating'])\n","y_testdf = pd.DataFrame(y_test)\n","test_labels = np.array(y_testdf['rating'])\n","\n","train_labels = np.expand_dims(train_labels, axis=1)\n","val_labels = np.expand_dims(val_labels, axis=1)\n","test_labels = np.expand_dims(test_labels, axis=1)\n","\n","train_images = np.array(X_train)\n","val_images = np.array(X_val)\n","test_images = np.array(X_test) "]},{"cell_type":"code","execution_count":5,"metadata":{"executionInfo":{"elapsed":3321,"status":"ok","timestamp":1649419223382,"user":{"displayName":"ECE324 Group","userId":"00541832639107211620"},"user_tz":240},"id":"aauRapFah3t6"},"outputs":[],"source":["# Normalize pixel values to be between 0 and 1\n","for i in range(len(train_images)):\n","    np.divide(train_images[i], 255.0)\n","for i in range(len(val_images)):\n","    np.divide(val_images[i], 255.0)\n","for i in range(len(test_images)):\n","    np.divide(test_images[i],255.0)"]},{"cell_type":"markdown","metadata":{"id":"B0D823CuLOA5"},"source":["### Load ResNet"]},{"cell_type":"code","execution_count":6,"metadata":{"executionInfo":{"elapsed":9,"status":"ok","timestamp":1649419223383,"user":{"displayName":"ECE324 Group","userId":"00541832639107211620"},"user_tz":240},"id":"ATCekSHd6g-k"},"outputs":[],"source":["def create_resnet():\n","  data_augmentation = tf.keras.Sequential([\n","    tf.keras.layers.RandomFlip('horizontal'),\n","    tf.keras.layers.RandomRotation(0.2),\n","  ])\n","\n","  image_width = 128\n","  image_height = 128\n","\n","  preprocess_input = tf.keras.applications.resnet50.preprocess_input\n","\n","  # Create the base model from the pre-trained model MobileNet V2\n","  IMG_SHAPE = (image_width, image_height, 3)\n","  base_model = tf.keras.applications.resnet50.ResNet50(input_shape=IMG_SHAPE,\n","                                                include_top=False,\n","                                                weights='imagenet')\n","  base_model.trainable = False\n","\n","  global_average_layer = tf.keras.layers.GlobalAveragePooling2D()\n","\n","  prediction_layer = tf.keras.layers.Dense(1)\n","\n","  inputs = tf.keras.Input(shape=(image_width, image_height, 3))\n","  x = data_augmentation(inputs)\n","  x = preprocess_input(x)\n","  x = base_model(x, training=False)\n","  x = global_average_layer(x)\n","  x = tf.keras.layers.Dropout(0.2)(x)\n","  outputs = prediction_layer(x)\n","  model = tf.keras.Model(inputs, outputs)\n","\n","  base_learning_rate = 0.0001\n","  model.compile(loss='mse',\n","              optimizer = tf.keras.optimizers.RMSprop(learning_rate=base_learning_rate/10),\n","              metrics=['mse'])\n","\n","  return model"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3548,"status":"ok","timestamp":1649419552276,"user":{"displayName":"ECE324 Group","userId":"00541832639107211620"},"user_tz":240},"id":"fT7kx8yY6oRR","outputId":"4bc68465-b986-42a4-a8d8-509e53a1599f"},"outputs":[{"data":{"text/plain":["\u003ctensorflow.python.training.tracking.util.CheckpointLoadStatus at 0x7ff1bb4c0e50\u003e"]},"execution_count":9,"metadata":{},"output_type":"execute_result"}],"source":["resnet = create_resnet()\n","resnet.load_weights('my_resnet')"]},{"cell_type":"markdown","metadata":{"id":"sxVtIkG2LRKC"},"source":["### Load MobileNet"]},{"cell_type":"code","execution_count":10,"metadata":{"executionInfo":{"elapsed":8,"status":"ok","timestamp":1649419552277,"user":{"displayName":"ECE324 Group","userId":"00541832639107211620"},"user_tz":240},"id":"6C73SZAB6ob1"},"outputs":[],"source":["def create_mobilenet():\n","  data_augmentation = tf.keras.Sequential([\n","    tf.keras.layers.RandomFlip('horizontal'),\n","    tf.keras.layers.RandomRotation(0.2),\n","  ])\n","\n","  image_width = 128\n","  image_height = 128\n","\n","  preprocess_input = tf.keras.applications.mobilenet_v2.preprocess_input\n","\n","  # Create the base model from the pre-trained model MobileNet V2\n","  IMG_SHAPE = (image_width, image_height, 3)\n","  base_model = tf.keras.applications.MobileNetV2(input_shape=IMG_SHAPE,\n","                                               include_top=False,\n","                                               weights='imagenet')\n","  base_model.trainable = False\n","\n","  global_average_layer = tf.keras.layers.GlobalAveragePooling2D()\n","\n","  prediction_layer = tf.keras.layers.Dense(1)\n","\n","  inputs = tf.keras.Input(shape=(image_width, image_height, 3))\n","  x = data_augmentation(inputs)\n","  x = preprocess_input(x)\n","  x = base_model(x, training=False)\n","  x = global_average_layer(x)\n","  x = tf.keras.layers.Dropout(0.2)(x)\n","  outputs = prediction_layer(x)\n","  model = tf.keras.Model(inputs, outputs)\n","\n","  base_learning_rate = 0.0001\n","  model.compile(loss='mse',\n","              optimizer = tf.keras.optimizers.RMSprop(learning_rate=base_learning_rate/10),\n","              metrics=['mse'])\n","\n","  return model"]},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3017,"status":"ok","timestamp":1649419559056,"user":{"displayName":"ECE324 Group","userId":"00541832639107211620"},"user_tz":240},"id":"lkTY8aAdjH4-","outputId":"6fbf01e9-2900-41c4-87fc-5ff7aed869e0"},"outputs":[{"name":"stdout","output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/mobilenet_v2/mobilenet_v2_weights_tf_dim_ordering_tf_kernels_1.0_128_no_top.h5\n","9412608/9406464 [==============================] - 0s 0us/step\n","9420800/9406464 [==============================] - 0s 0us/step\n"]},{"data":{"text/plain":["\u003ctensorflow.python.training.tracking.util.CheckpointLoadStatus at 0x7ff1bb0617d0\u003e"]},"execution_count":11,"metadata":{},"output_type":"execute_result"}],"source":["mobilenet = create_mobilenet()\n","mobilenet.load_weights('my_mobilenet')"]},{"cell_type":"markdown","metadata":{"id":"m-ULO-IqLU9v"},"source":["### Load VGG"]},{"cell_type":"code","execution_count":12,"metadata":{"executionInfo":{"elapsed":24,"status":"ok","timestamp":1649419559057,"user":{"displayName":"ECE324 Group","userId":"00541832639107211620"},"user_tz":240},"id":"nTtxOv43jRlv"},"outputs":[],"source":["def create_vgg():\n","  data_augmentation = tf.keras.Sequential([\n","    tf.keras.layers.RandomFlip('horizontal'),\n","    tf.keras.layers.RandomRotation(0.2),\n","  ])\n","\n","  image_width = 128\n","  image_height = 128\n","\n","  preprocess_input = tf.keras.applications.vgg16.preprocess_input\n","\n","  # Create the base model from the pre-trained model MobileNet V2\n","  IMG_SHAPE = (image_width, image_height, 3)\n","  base_model = tf.keras.applications.VGG16(input_shape=IMG_SHAPE,\n","                                               include_top=False,\n","                                               weights='imagenet')\n","  base_model.trainable = False\n","\n","  global_average_layer = tf.keras.layers.GlobalAveragePooling2D()\n","\n","  prediction_layer = tf.keras.layers.Dense(1)\n","\n","  inputs = tf.keras.Input(shape=(image_width, image_height, 3))\n","  x = data_augmentation(inputs)\n","  x = preprocess_input(x)\n","  x = base_model(x, training=False)\n","  x = global_average_layer(x)\n","  x = tf.keras.layers.Dropout(0.2)(x)\n","  outputs = prediction_layer(x)\n","  model = tf.keras.Model(inputs, outputs)\n","\n","  base_learning_rate = 0.0001\n","  model.compile(loss='mse',\n","              optimizer = tf.keras.optimizers.RMSprop(learning_rate=base_learning_rate/10),\n","              metrics=['mse'])\n","\n","  return model"]},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2468,"status":"ok","timestamp":1649419580544,"user":{"displayName":"ECE324 Group","userId":"00541832639107211620"},"user_tz":240},"id":"CPu-8jFNkE66","outputId":"8dcfc303-f7c6-495f-dfdd-7448d45a2d19"},"outputs":[{"name":"stdout","output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/vgg16/vgg16_weights_tf_dim_ordering_tf_kernels_notop.h5\n","58892288/58889256 [==============================] - 1s 0us/step\n","58900480/58889256 [==============================] - 1s 0us/step\n"]},{"data":{"text/plain":["\u003ctensorflow.python.training.tracking.util.CheckpointLoadStatus at 0x7ff1baf8b190\u003e"]},"execution_count":13,"metadata":{},"output_type":"execute_result"}],"source":["vgg = create_vgg()\n","vgg.load_weights('my_vgg')"]},{"cell_type":"markdown","metadata":{"id":"U6MCtYBaLY3S"},"source":["### Fit Stacked Model"]},{"cell_type":"code","execution_count":39,"metadata":{"executionInfo":{"elapsed":1465,"status":"ok","timestamp":1649420677226,"user":{"displayName":"ECE324 Group","userId":"00541832639107211620"},"user_tz":240},"id":"QdtnEyNxkRzw"},"outputs":[],"source":["from sklearn.datasets import make_blobs\n","from sklearn.metrics import accuracy_score\n","from keras.models import load_model\n","from keras.utils.vis_utils import plot_model\n","from keras.models import Model\n","from keras.layers import Input\n","from keras.layers import Dense\n","from keras.layers.merge import concatenate\n","\n","members = [resnet, mobilenet, vgg]\n","for i in range(len(members)):\n","\t\tmodel = members[i]\n","\t\tfor layer in model.layers:\n","\t\t\tlayer.trainable = False\n","\t\t\t# rename to avoid 'unique layer name' issue\n","\t\t\tlayer._name = 'ensemble_' + str(i+1) + '_' + layer.name\n","# define multi-headed input\n","ensemble_visible = [model.input for model in members]\n","# concatenate merge output from each model \n","ensemble_outputs = [model.output for model in members]\n","merge = concatenate(ensemble_outputs)\n","hidden = Dense(10, activation='relu')(merge)\n","output = Dense(3)(hidden)\n","model = Model(inputs=ensemble_visible, outputs=output)\n","# plot graph of ensemble\n","plot_model(model, show_shapes=True, to_file='model_graph.png')\n","# compile\n","model.compile(loss='mse', optimizer='adam', metrics=['mse'])\n"]},{"cell_type":"code","execution_count":40,"metadata":{"executionInfo":{"elapsed":11,"status":"ok","timestamp":1649420677227,"user":{"displayName":"ECE324 Group","userId":"00541832639107211620"},"user_tz":240},"id":"lssHT-J7FvXw"},"outputs":[],"source":["def fit_stacked_model(model, trainX, trainy, epochs, valX, valy):\n","  X = [trainX for _ in range(len(model.input))]\n","  X_val = [valX for _ in range(len(model.input))]\n","  history = model.fit(X, trainy, epochs=epochs, validation_data=(X_val, valy))\n","  return history"]},{"cell_type":"code","execution_count":41,"metadata":{"executionInfo":{"elapsed":10,"status":"ok","timestamp":1649420677228,"user":{"displayName":"ECE324 Group","userId":"00541832639107211620"},"user_tz":240},"id":"YO8KxQ5A9Z0B"},"outputs":[],"source":["# make a prediction with a stacked model\n","def predict_stacked_model(model, inputX):\n","\t# prepare input data\n","\tX = [inputX for _ in range(len(model.input))]\n","\t# make prediction\n","\treturn model.predict(X, verbose=0)"]},{"cell_type":"code","execution_count":42,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":321523,"status":"ok","timestamp":1649420998742,"user":{"displayName":"ECE324 Group","userId":"00541832639107211620"},"user_tz":240},"id":"4nRsBhEZA6HX"},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/20\n","375/375 [==============================] - 3015s 8s/step - loss: 13.9476 - mse: 13.9476\n","Epoch 2/20\n","375/375 [==============================] - 3134s 8s/step - loss: 1.4904 - mse: 1.4904\n","Epoch 3/20\n","375/375 [==============================] - 3004s 8s/step - loss: 0.3702 - mse: 0.3702\n","Epoch 4/20\n","211/375 [===============\u003e..............] - ETA: 21:23 - loss: 0.3331 - mse: 0.3331"]}],"source":["history = fit_stacked_model(model, train_images, train_labels, 10, val_images, val_labels)"]},{"cell_type":"code","execution_count":44,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":513},"executionInfo":{"elapsed":784,"status":"ok","timestamp":1649421006622,"user":{"displayName":"ECE324 Group","userId":"00541832639107211620"},"user_tz":240},"id":"XJzZt-WnH7nO","outputId":"bc6949ef-e68b-4465-e5b4-8e7a8e28bdde"},"outputs":[{"data":{"image/png":"\n","text/plain":["\u003cFigure size 576x576 with 2 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["import matplotlib.pyplot as plt\n","\n","acc = history.history['mse']\n","val_acc = history.history['val_mse']\n","\n","loss = history.history['loss']\n","val_loss = history.history['val_loss']\n","\n","plt.figure(figsize=(8, 8))\n","plt.subplot(2, 1, 1)\n","plt.plot(acc, label='Training MSE')\n","plt.plot(val_acc, label='Validation MSE')\n","plt.legend(loc='upper right')\n","plt.ylabel('MSE')\n","plt.title('Training and Validation MSE')\n","\n","plt.subplot(2, 1, 2)\n","plt.plot(loss, label='Training Loss')\n","plt.plot(val_loss, label='Validation Loss')\n","plt.legend(loc='upper right')\n","plt.ylabel('Loss')\n","plt.title('Training and Validation Loss')\n","plt.xlabel('epoch')\n","plt.show()"]},{"cell_type":"code","execution_count":45,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9537,"status":"ok","timestamp":1649421029427,"user":{"displayName":"ECE324 Group","userId":"00541832639107211620"},"user_tz":240},"id":"7Zb6uqZpB-7H","outputId":"d7d28d3e-bab0-42b4-a398-21d82ce78871"},"outputs":[{"name":"stdout","output_type":"stream","text":["125/125 [==============================] - 9s 72ms/step - loss: 0.3085 - mse: 0.3085\n","Test MSE: 0.30845221877098083\n"]}],"source":["X_test = [test_images for _ in range(len(model.input))]\n","loss, mse = model.evaluate(X_test, test_labels)\n","print('Test MSE:', mse)"]},{"cell_type":"markdown","metadata":{"id":"--wRx8DTLKK5"},"source":["### Results"]},{"cell_type":"code","execution_count":47,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":8125,"status":"ok","timestamp":1649421249027,"user":{"displayName":"ECE324 Group","userId":"00541832639107211620"},"user_tz":240},"id":"RJrGrRgQIHS4","outputId":"11936dbd-06b1-43a5-b6d9-5e8be15a8167"},"outputs":[{"data":{"text/html":["\n","  \u003cdiv id=\"df-11503cd5-be1b-4a56-afa5-77bed7f5284e\"\u003e\n","    \u003cdiv class=\"colab-df-container\"\u003e\n","      \u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003eActual\u003c/th\u003e\n","      \u003cth\u003ePrediction\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003e4.5\u003c/td\u003e\n","      \u003ctd\u003e4.005049\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1\u003c/th\u003e\n","      \u003ctd\u003e4.5\u003c/td\u003e\n","      \u003ctd\u003e3.977820\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e2\u003c/th\u003e\n","      \u003ctd\u003e2.5\u003c/td\u003e\n","      \u003ctd\u003e3.946000\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e3\u003c/th\u003e\n","      \u003ctd\u003e4.0\u003c/td\u003e\n","      \u003ctd\u003e4.143527\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e4\u003c/th\u003e\n","      \u003ctd\u003e4.0\u003c/td\u003e\n","      \u003ctd\u003e4.055296\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\n","      \u003cbutton class=\"colab-df-convert\" onclick=\"convertToInteractive('df-11503cd5-be1b-4a56-afa5-77bed7f5284e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\"\u003e\n","        \n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\"\u003e\n","    \u003cpath d=\"M0 0h24v24H0V0z\" fill=\"none\"/\u003e\n","    \u003cpath d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/\u003e\u003cpath d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/\u003e\n","  \u003c/svg\u003e\n","      \u003c/button\u003e\n","      \n","  \u003cstyle\u003e\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  \u003c/style\u003e\n","\n","      \u003cscript\u003e\n","        const buttonEl =\n","          document.querySelector('#df-11503cd5-be1b-4a56-afa5-77bed7f5284e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-11503cd5-be1b-4a56-afa5-77bed7f5284e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '\u003ca target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb\u003edata table notebook\u003c/a\u003e'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      \u003c/script\u003e\n","    \u003c/div\u003e\n","  \u003c/div\u003e\n","  "],"text/plain":["   Actual  Prediction\n","0     4.5    4.005049\n","1     4.5    3.977820\n","2     2.5    3.946000\n","3     4.0    4.143527\n","4     4.0    4.055296"]},"execution_count":47,"metadata":{},"output_type":"execute_result"}],"source":["x = test_images[:]\n","y = test_labels[:].flatten()\n","pred = predict_stacked_model(model, x).flatten()\n","df = pd.DataFrame(list(zip(y, pred)),\n","               columns =['Actual', 'Prediction'])\n","df.head()"]},{"cell_type":"code","execution_count":48,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":2975,"status":"ok","timestamp":1649421259011,"user":{"displayName":"ECE324 Group","userId":"00541832639107211620"},"user_tz":240},"id":"gNRffd-qKlHn","outputId":"d5efdac0-ce36-4812-ac24-f4eb3d2c5429"},"outputs":[{"data":{"image/png":"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\n","text/plain":["\u003cFigure size 432x288 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"},{"data":{"image/png":"\n","text/plain":["\u003cFigure size 432x288 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"},{"data":{"image/png":"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\n","text/plain":["\u003cFigure size 432x288 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"},{"data":{"image/png":"\n","text/plain":["\u003cFigure size 432x288 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"},{"data":{"image/png":"\n","text/plain":["\u003cFigure size 432x288 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"},{"data":{"image/png":"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\n","text/plain":["\u003cFigure size 432x288 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"},{"data":{"image/png":"\n","text/plain":["\u003cFigure size 432x288 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"},{"data":{"image/png":"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\n","text/plain":["\u003cFigure size 432x288 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["actual = [1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5]\n","\n","for i in range(len(actual)):\n","  x = df[df['Actual']==actual[i]]\n","  data = x['Prediction'].tolist()\n","  plt.hist(data, bins=[0,0.5,1,1.5,2,2.5,3,3.5,4,4.5,5], edgecolor=\"black\")\n","  plt.title(f\"Prediction Distribution for Actual Rating = {actual[i]}\")\n","  plt.show()"]}],"metadata":{"accelerator":"GPU","colab":{"authorship_tag":"ABX9TyP6MI8bTkwtAN//qI9u9xXz","mount_file_id":"1x2ISBurl7UfkhAyIybEfYEz8Lrl_D3J-","name":"Ensemble","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}